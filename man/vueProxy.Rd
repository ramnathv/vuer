% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/vue.R
\name{vueProxy}
\alias{vueProxy}
\alias{vueUpdateData}
\title{Send commands to a Vue instance in a Shiny app}
\usage{
vueProxy(outputId, session = shiny::getDefaultReactiveDomain(),
  deferUntilFlush = TRUE)

vueUpdateData(proxy, ...)
}
\description{
Send commands to a Vue instance in a Shiny app

Update data in a Vue instance
}
\examples{
ui <- div(
  tags$label("Enter username"),
  tags$input(type = 'text', "v-model" = "username"),
  tags$p("Vue -> Vue: Hello {{username}}"),
  actionButton("set_name", "Shiny -> Vue"),
  verbatimTextOutput("username")
) \%>\%
  vue(
    data = list(username = ""),
    # Vue UI -> Shiny UI
    watch = vue_watch("username"),
   elementId = "app"
 )
server <- function(input, output, session){
  # Shiny server -> Vue UI
  observeEvent(input$set_name, {
    vueProxy("app") \%>\%
      updateProp("username", "Ramnath")
  })
  output$username <- renderPrint({
    paste("Vue -> Shiny:", input$username)
  })
}
shiny::shinyApp(ui = ui, server = server)
}
